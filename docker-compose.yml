
services:
  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_backend
    ports:
      - "8000:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - QDRANT_STORAGE_PATH=/app/qdrant_storage
    volumes:
      # Persist Qdrant storage
      - ./backend/qdrant_storage:/app/qdrant_storage
      # Persist temp uploads
      - ./backend/temp:/app/temp
      # Mount code for development (hot reload)
      - ./backend/main.py:/app/main.py
      - ./backend/config.py:/app/config.py
      - ./backend/services.py:/app/services.py
      - ./backend/utils.py:/app/utils.py
      - ./backend/exceptions.py:/app/exceptions.py
      - ./backend/tests:/app/tests
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rag_network
  # Nginx for serving frontend
  frontend:
    image: nginx:alpine
    container_name: rag_frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
    - backend
    restart: unless-stopped
    networks:
      - rag_network

networks:
  rag_network:
    driver: bridge